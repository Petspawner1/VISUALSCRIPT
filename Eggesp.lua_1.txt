local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- üê£ Pet List
local petTable = {
    ["Common Egg"] = { "Dog", "Bunny", "Golden Lab" },
    ["Uncommon Egg"] = { "Chicken", "Black Bunny", "Cat", "Deer" },
    ["Rare Egg"] = { "Pig", "Monkey", "Rooster", "Orange Tabby", "Spotted Deer" }
}
["Paradise Egg"] = { "Mimic octopos", "Ostrich", "Macaw" },
-- üí† UI Setup
local gui = Instance.new("ScreenGui", PlayerGui)
gui.Name = "PetSimulatorUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 320, 0, 200)
frame.Position = UDim2.new(0.35, 0, 0.4, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel", frame)
title.Text = "üê£ Visual Pet Hatch Simulator"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, 0, 0, 30)

-- ü•ö Egg Type Input
local eggInput = Instance.new("TextBox", frame)
eggInput.PlaceholderText = "Enter Egg Type (e.g. Common Egg)"
eggInput.Text = ""
eggInput.Font = Enum.Font.Gotham
eggInput.TextSize = 14
eggInput.TextColor3 = Color3.new(1, 1, 1)
eggInput.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
eggInput.BorderSizePixel = 0
eggInput.Position = UDim2.new(0.05, 0, 0.2, 0)
eggInput.Size = UDim2.new(0.9, 0, 0, 30)
Instance.new("UICorner", eggInput).CornerRadius = UDim.new(0, 6)

-- üêæ Hatch Result
local result = Instance.new("TextLabel", frame)
result.Text = "Pet: [None]"
result.Font = Enum.Font.GothamBold
result.TextSize = 14
result.TextColor3 = Color3.fromRGB(255, 255, 160)
result.BackgroundTransparency = 1
result.Position = UDim2.new(0.05, 0, 0.4, 0)
result.Size = UDim2.new(0.9, 0, 0, 20)
result.TextScaled = true
result.TextWrapped = true

-- üü© Hatch Button
local hatchBtn = Instance.new("TextButton", frame)
hatchBtn.Text = "üéâ Hatch Pet"
hatchBtn.Font = Enum.Font.GothamBold
hatchBtn.TextSize = 14
hatchBtn.TextColor3 = Color3.new(1, 1, 1)
hatchBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 100)
hatchBtn.BorderSizePixel = 0
hatchBtn.Position = UDim2.new(0.05, 0, 0.6, 0)
hatchBtn.Size = UDim2.new(0.9, 0, 0, 30)
Instance.new("UICorner", hatchBtn).CornerRadius = UDim.new(0, 8)

-- üîÅ Auto Hatch Toggle
local autoToggle = Instance.new("TextButton", frame)
autoToggle.Text = "üîÅ Auto Hatch: OFF"
autoToggle.Font = Enum.Font.GothamBold
autoToggle.TextSize = 14
autoToggle.TextColor3 = Color3.new(1, 1, 1)
autoToggle.BackgroundColor3 = Color3.fromRGB(120, 60, 200)
autoToggle.BorderSizePixel = 0
autoToggle.Position = UDim2.new(0.05, 0, 0.8, 0)
autoToggle.Size = UDim2.new(0.9, 0, 0, 25)
Instance.new("UICorner", autoToggle).CornerRadius = UDim.new(0, 8)

-- üîÅ Auto Hatch Logic
local autoHatch = false

autoToggle.MouseButton1Click:Connect(function()
	autoHatch = not autoHatch
	autoToggle.Text = autoHatch and "üîÅ Auto Hatch: ON" or "üîÅ Auto Hatch: OFF"
end)

-- üé≤ Hatch Function
local function hatch()
	local eggType = eggInput.Text
	local pets = petTable[eggType]
	if pets then
		local pet = pets[math.random(1, #pets)]
		result.Text = "Pet: " .. pet
		result.TextTransparency = 1
		local tween = TweenService:Create(result, TweenInfo.new(0.4), { TextTransparency = 0 })
		tween:Play()
	else
		result.Text = "Invalid Egg Type!"
	end
end

-- üñ±Ô∏è Manual Hatch
hatchBtn.MouseButton1Click:Connect(hatch)

-- üîÅ Auto Hatch Loop
task.spawn(function()
	while true do
		if autoHatch then
			hatch()
		end
		task.wait(2.5)
	end
end)
